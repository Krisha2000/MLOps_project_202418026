name: Prudential MLOps CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This job runs basic checks on our code to ensure quality
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run basic import tests
        run: |
          python -c "import src.main; print('API script is importable.')"
          python -c "import src.train; print('Training script is importable.')"

    continuous-deployment:
        needs: continuous-integration
        runs-on: ubuntu-latest
        if: github.event_name == 'workflow_dispatch'
        services:
          redis:
            image: redis
            ports:
              - 6379:6379
     
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3
            with:
              fetch-depth: 0 
     
          - name: Set up Python 3.11
            uses: actions/setup-python@v4
            with:
              python-version: '3.11'
     
          - name: Install system dependencies
            run: |
              sudo apt-get update
              sudo apt-get install -y libgit2-dev build-essential
     
          - name: Install Python dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
     
          - name: Set up DVC
            uses: iterative/setup-dvc@v1
          
          - name: Pull DVC data
            run: dvc pull --allow-missing
            
          # --- THE FIX: Run all Feast commands from the root directory ---
          - name: Prepare Data, Apply, and Materialize Feature Store
            env:
              FEAST_REDIS_HOST: localhost
            run: |
              # Step 1: Create the parquet file from the project root.
              echo "Creating Parquet data file..."
              python scripts/load_features.py
              
              # Step 2: Run 'apply' from the root, telling Feast where the repo is.
              echo "Applying feature definitions..."
              feast -c feature_repo apply
              
              # Step 3: Run 'materialize' from the root.
              echo "Materializing features..."
              feast -c feature_repo materialize-incremental $(date -u +%Y-%m-%dT%H:%M:%S)
     
          - name: Run Model Training
            run: |
              echo "Starting MLflow server..."
              mlflow server --host 127.0.0.1 --port 5000 &
              sleep 5
              
              echo "Running training script..."
              python src.train
     
          - name: Log in to Docker Hub
            uses: docker/login-action@v2
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
     
          - name: Build and Push Docker Image
            run: |
              IMAGE_TAG=${{ github.sha }}
              IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/prudential-api
     
              echo "Building Docker image: $IMAGE_NAME:$IMAGE_TAG"
              docker build . -t $IMAGE_NAME:$IMAGE_TAG
     
              echo "Pushing Docker image to Docker Hub..."
              docker push $IMAGE_NAME:$IMAGE_TAG
              echo "Image pushed successfully."